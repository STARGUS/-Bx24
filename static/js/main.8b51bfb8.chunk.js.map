{"version":3,"sources":["_context.jsx","Content/midle/additionalFields.jsx","Content/Moduls/bathhouse/broom/broomOrdinary/broomOrdinary.jsx","Content/Moduls/bathhouse/broom/broomAromatic/broomAromatic.jsx","Content/Moduls/bathhouse/broom/broom.jsx","Content/Moduls/bathhouse/bathhouse.jsx","Content/alert/_alert.jsx","Content/midle/formAdd.jsx","Content/header/header.jsx","Content/content.jsx","App.js","index.js"],"names":["CostomContext","createContext","Context","props","LISTTIME","value","useState","active","time","date","broom","broomOrdinary","oak","birch","broomAromatic","wormwood","tributary","mata","drinkAndTreats","order","bathhouse","setBathhouse","chernyean","setChernyean","gazebos","setGazebos","count","crib","setCrib","pet","massage","manicure","businessExcursion","orderServices","setOrderServices","house","setHouse","FIO","setFIO","bathhouseTime","setBathhouseTime","chernyeanTime","setChernyeanTime","gazebosTime","setGazebosTime","AlertText","setAlertText","show_on","setShow_on","tops","From","To","dateResidence","setDateResidence","arrivalTime","meal","barbecue","text","banquet","houseWishes","extraSpace","addFields","setAddFields","toDay","Date","dates","getFullYear","getMonth","getDate","useEffect","petAlert","massageAlert","setTimeout","OutCheckbox","e","sets","Function","prototype","Provider","children","AdditionalFields","useContext","className","type","min","max","list","name","onChange","target","id","checked","console","log","htmlFor","placeholder","class","onClick","BroomOrdinary","BroomAromatic","Broom","Bathhouse","maxLength","required","pattern","onBlur","length","Alert","style","top","Middle","action","method","disabled","Header","document","documentElement","clientWidth","Win_width","setWin_width","shutters","setShutters","window","addEventListener","pageYOffset","onscroll","href","src","alt","title","version","xmlns","xmlnsXlink","xmlnsa","x","y","width","height","viewBox","enableBackground","xmlSpace","d","Content","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b51bfb8.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CostomContext = createContext();\n\nexport const Context = (props) => {\n  const LISTTIME = (\n    <>\n      <option value={\"09:00\"} />\n      <option value={\"10:00\"} />\n      <option value={\"11:00\"} />\n      <option value={\"12:00\"} />\n      <option value={\"13:00\"} />\n      <option value={\"14:00\"} />\n      <option value={\"15:00\"} />\n      <option value={\"16:00\"} />\n      <option value={\"17:00\"} />\n      <option value={\"18:00\"} />\n      <option value={\"19:00\"} />\n      <option value={\"20:00\"} />\n      <option value={\"21:00\"} />\n      <option value={\"22:00\"} />\n    </>\n  );\n  const [bathhouse, setBathhouse] = useState({\n    active: false,\n    time: \"09:00\",\n    date: \"\",\n    broom: {\n      active: false,\n      broomOrdinary: { active: false, oak: 0, birch: 0 },\n      broomAromatic: { active: false, wormwood: 0, tributary: 0, mata: 0 },\n    },\n    drinkAndTreats: { active: false, order: \"\" },\n  });\n  const [chernyean, setChernyean] = useState(false);\n  const [gazebos, setGazebos] = useState(false);\n  const [crib, setCrib] = useState({ active: false, count: 1 });\n  const [orderServices, setOrderServices] = useState({\n    pet: false,\n    massage: false,\n    manicure: false,\n    businessExcursion: false,\n  });\n  const [house, setHouse] = useState(\"#1\");\n  const [FIO, setFIO] = useState(\"Иванов Иван Иванович\");\n  //   const [gazebos, setGazebos] = useState(false);\n  //   const [gazebos, setGazebos] = useState(false);\n  const [bathhouseTime, setBathhouseTime] = useState(\"00:00\");\n  const [chernyeanTime, setChernyeanTime] = useState(\"00:00\");\n  const [gazebosTime, setGazebosTime] = useState(\"00:00\");\n\n  // Переменные Алерт\n  const [AlertText, setAlertText] = useState(\"\");\n  const [show_on, setShow_on] = useState(false);\n  const [tops, setTops] = useState(\"5rem\");\n\n  const [dateResidence, setDateResidence] = useState({\n    From: \"2021-01-01\",\n    To: \"2021-01-01\",\n  });\n\n  // onChange={(e) => setMeal(e.target.value)}\n  const [addFields, setAddFields] = useState({\n    arrivalTime: \"00:00\",\n    meal: { active: false, time: \"00:00\" },\n    barbecue: { active: false, text: \"\" },\n    banquet: { active: false, text: \"\" },\n    houseWishes: { active: false, text: \"\" },\n    extraSpace: { active: false, count: 1 },\n  });\n\n  const OutCheckbox = (e, sets = Function.prototype) => {\n    setTimeout(sets(e), 1000);\n  };\n\n  const toDay = new Date();\n  const dates =\n    toDay.getFullYear() +\n    \"-\" +\n    (toDay.getMonth() + 1 < 10\n      ? \"0\" + toDay.getMonth() + 1\n      : toDay.getMonth() + 1) +\n    \"-\" +\n    (toDay.getDate() < 10 ? \"0\" + toDay.getDate() : toDay.getDate());\n\n  useEffect(() => {\n    if (orderServices.pet) {\n      petAlert();\n    }\n  }, [orderServices.pet]);\n\n  useEffect(() => {\n    if (orderServices.massage) {\n      massageAlert();\n    }\n  }, [orderServices.massage]);\n\n  const massageAlert = () => {\n    setAlertText(\"Необходима предварительная запись. Уточните у менеджера.\");\n    setShow_on(true);\n    setTimeout(() => {\n      setShow_on(false);\n    }, 3500);\n  };\n  const petAlert = () => {\n    setAlertText(\n      \"Проживание с питомцев возможно не во всех домах. Уточните у менеджера.\"\n    );\n    setShow_on(true);\n    setTimeout(() => {\n      setShow_on(false);\n    }, 3500);\n  };\n\n  //Данные для вывода\n  const value = {\n    dateResidence,\n    petAlert,\n    massageAlert,\n    AlertText,\n    show_on,\n    tops,\n    setDateResidence,\n    setGazebosTime,\n    setBathhouse,\n    setChernyean,\n    setGazebos,\n    setBathhouseTime,\n    setChernyeanTime,\n    setHouse,\n    OutCheckbox,\n    setCrib,\n    setFIO,\n    setOrderServices,\n    LISTTIME,\n    bathhouse,\n    orderServices,\n    crib,\n    house,\n    chernyean,\n    gazebos,\n    bathhouseTime,\n    chernyeanTime,\n    gazebosTime,\n    FIO,\n    addFields,\n    setAddFields,\n    dates,\n  };\n\n  return (\n    <CostomContext.Provider value={value}>\n      {props.children}\n    </CostomContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../_context.jsx\";\n\nexport default function AdditionalFields() {\n  const { addFields, setAddFields, LISTTIME } = useContext(CostomContext);\n  return (\n    <div>\n      <div className=\"bathhouse--time\">\n        <div className=\"form-arrival\">\n          <div>Примерное время прибытия:</div>\n          <input\n            className=\"input input_time\"\n            type=\"time\"\n            min=\"09:00\"\n            max=\"22:00\"\n            list=\"inputs_time4\"\n            name=\"arrival_time\"\n            value={addFields.arrivalTime}\n            onChange={(e) =>\n              setAddFields({ ...addFields, arrivalTime: e.target.value })\n            }\n          />\n          <datalist id=\"inputs_time4\">{LISTTIME}</datalist>\n        </div>\n      </div>\n      <div\n        className={\n          addFields.meal.active\n            ? \"bathhouse opencheckbox--show\"\n            : \"bathhouse close--bathhouse\"\n        }\n      >\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"meal\"\n            id=\"meal\"\n            checked={addFields.meal.active}\n            onChange={(e) => {\n              setAddFields({\n                ...addFields,\n                meal: { ...addFields.meal, active: e.target.checked },\n              });\n              console.log(addFields);\n            }}\n          />\n          <label htmlFor=\"meal\">Заказать Обед / Ужин</label>\n        </div>\n        {addFields.meal.active && (\n          <div className=\"checkbox--time\">\n            <div>Время:</div>\n            <div className=\"bathhouse--time\">\n              <input\n                className=\"input input_time\"\n                type=\"time\"\n                min=\"09:00\"\n                max=\"22:00\"\n                name=\"meal_time\"\n                value={addFields.meal.time}\n                onChange={(e) =>\n                  setAddFields({\n                    ...addFields,\n                    meal: { ...addFields.meal, time: e.target.value },\n                  })\n                }\n              />\n            </div>\n          </div>\n        )}\n      </div>\n      <div\n        className={\n          addFields.barbecue.active\n            ? \"bathhouse opencheckbox--show barbecue\"\n            : \"bathhouse barbecue close--bathhouse\"\n        }\n      >\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"barbecue\"\n            id=\"barbecue\"\n            checked={addFields.barbecue.active}\n            onChange={(e) => {\n              setAddFields({\n                ...addFields,\n                barbecue: { ...addFields.barbecue, active: e.target.checked },\n              });\n            }}\n          />\n          <label htmlFor=\"barbecue\">Закажу шашлыки</label>\n        </div>\n        {addFields.barbecue.active && (\n          <div className=\"checkbox--time barbecue\">\n            <div className=\"bathhouse--time\">\n              <textarea\n                placeholder=\"Пожалуйста, укажите количество порций, примерный вес и при необходимости наличие гарнира и напитков\"\n                className=\"textarea input_time\"\n                name=\"barbecue_time\"\n                value={addFields.barbecue.text}\n                onChange={(e) => {\n                  setAddFields({\n                    ...addFields,\n                    barbecue: { ...addFields.barbecue, text: e.target.value },\n                  });\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n      <div\n        className={\n          addFields.banquet.active\n            ? \"bathhouse opencheckbox--show barbecue\"\n            : \"bathhouse barbecue close--bathhouse\"\n        }\n      >\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"banquet\"\n            id=\"banquet\"\n            checked={addFields.banquet.active}\n            onChange={(e) => {\n              setAddFields({\n                ...addFields,\n                banquet: { ...addFields.banquet, active: e.target.checked },\n              });\n            }}\n          />\n          <label htmlFor=\"banquet\">Закажу банкет</label>\n        </div>\n        {addFields.banquet.active && (\n          <div className=\"checkbox--time barbecue\">\n            <div>Состав банкета:</div>\n            <div className=\"bathhouse--time\">\n              <textarea\n                className=\"textarea input_time\"\n                placeholder=\"Пожалуйста, укажите все ваши требования к организации банкета\"\n                name=\"banquet_text\"\n                value={addFields.banquet.text}\n                onChange={(e) => {\n                  setAddFields({\n                    ...addFields,\n                    banquet: { ...addFields.banquet, text: e.target.value },\n                  });\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n      <div\n        className={\n          addFields.houseWishes.active\n            ? \"bathhouse opencheckbox--show barbecue\"\n            : \"bathhouse barbecue close--bathhouse\"\n        }\n      >\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"houseWishes\"\n            id=\"houseWishes\"\n            checked={addFields.houseWishes.active}\n            onChange={(e) => {\n              setAddFields({\n                ...addFields,\n                houseWishes: {\n                  ...addFields.houseWishes,\n                  active: e.target.checked,\n                },\n              });\n            }}\n          />\n          <label htmlFor=\"houseWishes\">Дополнительные пожелания по дому</label>\n        </div>\n        {addFields.houseWishes.active && (\n          <div className=\"checkbox--time barbecue\">\n            {/* <div>Состав банкета:</div> */}\n            <div className=\"bathhouse--time\">\n              <textarea\n                className=\"textarea input_time\"\n                name=\"houseWishes_text\"\n                placeholder=\"Пожалуйста, укажите ваши пожелания, которые необходимо предусмотреть в ваших аппартаментах\"\n                value={addFields.houseWishes.text}\n                onChange={(e) => {\n                  setAddFields({\n                    ...addFields,\n                    houseWishes: {\n                      ...addFields.houseWishes,\n                      text: e.target.value,\n                    },\n                  });\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n      <div\n        className={\n          addFields.extraSpace.active\n            ? \"bathhouse opencheckbox--show barbecue\"\n            : \"bathhouse barbecue close--bathhouse\"\n        }\n      >\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"extraSpace\"\n            id=\"extraSpace\"\n            checked={addFields.extraSpace.active}\n            onChange={(e) => {\n              setAddFields({\n                ...addFields,\n                extraSpace: {\n                  ...addFields.extraSpace,\n                  active: e.target.checked,\n                },\n              });\n            }}\n          />\n          <label htmlFor=\"extraSpace\">\n            Дополнительное место по цене 1000 руб/сутки\n          </label>\n        </div>\n        {addFields.extraSpace.active && (\n          <div className=\"checkbox--time extraSpace\">\n            {/* <div>Состав банкета:</div> */}\n            <div>Количество персон:</div>\n            <div className=\"bathhouse--time\">\n              <input\n                className=\"input input_time extraSpace_range\"\n                type=\"number\"\n                min=\"1\"\n                max=\"2\"\n                id=\"extraSpace\"\n                name=\"extraSpace\"\n                value={addFields.extraSpace.count}\n                onChange={(e) => {\n                  setAddFields({\n                    ...addFields,\n                    extraSpace: {\n                      ...addFields.extraSpace,\n                      count: e.target.value,\n                    },\n                  });\n                }}\n              />\n              <div\n                class=\"item__add\"\n                onClick={() => {\n                  if (addFields.extraSpace.count < 2)\n                    setAddFields({\n                      ...addFields,\n                      extraSpace: {\n                        ...addFields.extraSpace,\n                        count: addFields.extraSpace.count + 1,\n                      },\n                    });\n                }}\n              >\n                ‹\n              </div>\n              <div\n                class=\"item__remove\"\n                onClick={() => {\n                  if (addFields.extraSpace.count > 1)\n                    setAddFields({\n                      ...addFields,\n                      extraSpace: {\n                        ...addFields.extraSpace,\n                        count: addFields.extraSpace.count - 1,\n                      },\n                    });\n                }}\n              >\n                ‹\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../../../../_context.jsx\";\n\nexport default function BroomOrdinary() {\n  const { bathhouse, setBathhouse } = useContext(CostomContext);\n\n  return (\n    <>\n      <div className=\"checkbox--time extraSpace\">\n        <div>Дубовых веников:</div>\n        <div className=\"bathhouse--time\">\n          <input\n            className=\"input input_time extraSpace_range\"\n            type=\"number\"\n            min=\"0\"\n            max=\"10\"\n            id=\"broomOrdinary_oak\"\n            name=\"broomOrdinary_oak\"\n            value={bathhouse.broom.broomOrdinary.oak}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: {\n                  ...bathhouse.broom,\n                  broomOrdinary: {\n                    ...bathhouse.broom.broomOrdinary,\n                    oak: e.target.value,\n                  },\n                },\n              });\n            }}\n          />\n          <div\n            class=\"item__add\"\n            onClick={() => {\n              if (bathhouse.broom.broomOrdinary.oak < 10)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomOrdinary: {\n                      ...bathhouse.broom.broomOrdinary,\n                      oak: bathhouse.broom.broomOrdinary.oak + 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n          <div\n            class=\"item__remove\"\n            onClick={() => {\n              if (bathhouse.broom.broomOrdinary.oak > 0)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomOrdinary: {\n                      ...bathhouse.broom.broomOrdinary,\n                      oak: bathhouse.broom.broomOrdinary.oak - 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n        </div>\n      </div>\n      <div className=\"checkbox--time extraSpace\">\n        <div>Березовых веников:</div>\n        <div className=\"bathhouse--time\">\n          <input\n            className=\"input input_time extraSpace_range\"\n            type=\"number\"\n            min=\"0\"\n            max=\"7\"\n            id=\"broomOrdinary_birch\"\n            name=\"broomOrdinary_birch\"\n            value={bathhouse.broom.broomOrdinary.birch}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: {\n                  ...bathhouse.broom,\n                  broomOrdinary: {\n                    ...bathhouse.broom.broomOrdinary,\n                    birch: e.target.value,\n                  },\n                },\n              });\n            }}\n          />\n          <div\n            class=\"item__add\"\n            onClick={() => {\n              if (bathhouse.broom.broomOrdinary.birch < 10)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomOrdinary: {\n                      ...bathhouse.broom.broomOrdinary,\n                      birch: bathhouse.broom.broomOrdinary.birch + 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n          <div\n            class=\"item__remove\"\n            onClick={() => {\n              if (bathhouse.broom.broomOrdinary.birch > 0)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomOrdinary: {\n                      ...bathhouse.broom.broomOrdinary,\n                      birch: bathhouse.broom.broomOrdinary.birch - 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../../../../_context.jsx\";\n\nexport default function BroomAromatic() {\n  const { bathhouse, setBathhouse } = useContext(CostomContext);\n\n  return (\n    <>\n      <div className=\"checkbox--time extraSpace\">\n        <div>Полынных веников:</div>\n        <div className=\"bathhouse--time\">\n          <input\n            className=\"input input_time extraSpace_range\"\n            type=\"number\"\n            min=\"0\"\n            max=\"10\"\n            id=\"broomOrdinary_wormwood\"\n            name=\"broomOrdinary_wormwood\"\n            value={bathhouse.broom.broomAromatic.wormwood}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: {\n                  ...bathhouse.broom,\n                  broomAromatic: {\n                    ...bathhouse.broom.broomAromatic,\n                    wormwood: e.target.value,\n                  },\n                },\n              });\n            }}\n          />\n          <div\n            class=\"item__add\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.wormwood < 10)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      wormwood: bathhouse.broom.broomAromatic.wormwood + 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n          <div\n            class=\"item__remove\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.wormwood > 0)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      wormwood: bathhouse.broom.broomAromatic.wormwood - 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n        </div>\n      </div>\n      <div className=\"checkbox--time extraSpace\">\n        <div>Донниковых веников:</div>\n        <div className=\"bathhouse--time\">\n          <input\n            className=\"input input_time extraSpace_range\"\n            type=\"number\"\n            min=\"0\"\n            max=\"10\"\n            id=\"broomOrdinary_tributary\"\n            name=\"broomOrdinary_tributary\"\n            value={bathhouse.broom.broomAromatic.tributary}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: {\n                  ...bathhouse.broom,\n                  broomAromatic: {\n                    ...bathhouse.broom.broomAromatic,\n                    tributary: e.target.value,\n                  },\n                },\n              });\n            }}\n          />\n          <div\n            class=\"item__add\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.tributary < 10)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      tributary: bathhouse.broom.broomAromatic.tributary + 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n          <div\n            class=\"item__remove\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.tributary > 0)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      tributary: bathhouse.broom.broomAromatic.tributary - 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n        </div>\n      </div>\n      <div className=\"checkbox--time extraSpace\">\n        <div>Мятных веников:</div>\n        <div className=\"bathhouse--time\">\n          <input\n            className=\"input input_time extraSpace_range\"\n            type=\"number\"\n            min=\"0\"\n            max=\"10\"\n            id=\"broomOrdinary_mata\"\n            name=\"broomOrdinary_mata\"\n            value={bathhouse.broom.broomAromatic.mata}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: {\n                  ...bathhouse.broom,\n                  broomAromatic: {\n                    ...bathhouse.broom.broomAromatic,\n                    mata: e.target.value,\n                  },\n                },\n              });\n            }}\n          />\n          <div\n            class=\"item__add\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.mata < 10)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      mata: bathhouse.broom.broomAromatic.mata + 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n          <div\n            class=\"item__remove\"\n            onClick={() => {\n              if (bathhouse.broom.broomAromatic.mata > 0)\n                setBathhouse({\n                  ...bathhouse,\n                  broom: {\n                    ...bathhouse.broom,\n                    broomAromatic: {\n                      ...bathhouse.broom.broomAromatic,\n                      mata: bathhouse.broom.broomAromatic.mata - 1,\n                    },\n                  },\n                });\n            }}\n          >\n            ‹\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../../../_context.jsx\";\nimport \"./broom.scss\";\nimport BroomOrdinary from \"./broomOrdinary/broomOrdinary.jsx\";\nimport BroomAromatic from \"./broomAromatic/broomAromatic.jsx\";\n\nexport default function Broom() {\n  const { bathhouse, setBathhouse } = useContext(CostomContext);\n  return (\n    <div\n      className={\n        bathhouse.broom.active\n          ? \"broom opencheckbox--show\"\n          : \"broom close--bathhouse\"\n      }\n    >\n      <div>\n        <div className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"broom\"\n            id=\"broom\"\n            checked={bathhouse.broom.active}\n            onChange={(e) => {\n              setBathhouse({\n                ...bathhouse,\n                broom: { ...bathhouse.broom, active: e.target.checked },\n              });\n            }}\n          />\n          <label htmlFor=\"broom\">Веники</label>\n        </div>\n      </div>\n      <div>\n        {bathhouse.broom.active && (\n          <>\n            <div>\n              <div\n                className={\n                  bathhouse.broom.broomOrdinary.active\n                    ? \"checkbox broom--ordinary opencheckbox--show\"\n                    : \"checkbox broom--ordinary close-broom\"\n                }\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"broomOrdinary\"\n                  id=\"broomOrdinary\"\n                  checked={bathhouse.broom.broomOrdinary.active}\n                  onChange={(e) => {\n                    setBathhouse({\n                      ...bathhouse,\n                      broom: {\n                        ...bathhouse.broom,\n                        broomOrdinary: {\n                          ...bathhouse.broom.broomOrdinary,\n                          active: e.target.checked,\n                        },\n                      },\n                    });\n                  }}\n                />\n                <label htmlFor=\"broomOrdinary\">\n                  Березовые&nbsp;/&nbsp;Дубовые\n                </label>\n              </div>\n              {bathhouse.broom.broomOrdinary.active && <BroomOrdinary />}\n              <div\n                className={\n                  bathhouse.broom.broomAromatic.active\n                    ? \"checkbox broom--aromatic opencheckbox--show\"\n                    : \"checkbox broom--aromatic close-broom\"\n                }\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"broomAromatic\"\n                  id=\"broomAromatic\"\n                  checked={bathhouse.broom.broomAromatic.active}\n                  onChange={(e) => {\n                    setBathhouse({\n                      ...bathhouse,\n                      broom: {\n                        ...bathhouse.broom,\n                        broomAromatic: {\n                          ...bathhouse.broom.broomAromatic,\n                          active: e.target.checked,\n                        },\n                      },\n                    });\n                  }}\n                />\n                <label htmlFor=\"broomAromatic\">Ароматические</label>\n              </div>\n              {bathhouse.broom.broomAromatic.active && <BroomAromatic />}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../../_context.jsx\";\nimport \"./bathhouse.scss\";\nimport Broom from \"./broom/broom.jsx\";\n\nexport default function Bathhouse() {\n  const { LISTTIME, bathhouse, setBathhouse, dates } =\n    useContext(CostomContext);\n\n  return (\n    <div\n      className={\n        bathhouse.active\n          ? \"bathhouse_sauna opencheckbox--show bathhouse_sauna--active\"\n          : \"bathhouse_sauna close--bathhouse\"\n      }\n    >\n      <div className=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"bathhouse_sauna\"\n          id=\"bathhouse_sauna\"\n          checked={bathhouse.active}\n          onChange={(e) => {\n            setBathhouse({ ...bathhouse, active: e.target.checked });\n          }}\n        />\n        <label htmlFor=\"bathhouse_sauna\">Забронировать баню</label>\n      </div>\n      {bathhouse.active && (\n        <>\n          <div className=\"checkbox--time bathhouse--date\">\n            <div className=\"bathhouse--date--day\">\n              <span>Дата:</span>\n              <input\n                value={bathhouse.date}\n                className=\"input\"\n                type=\"date\"\n                name=\"dateFrom_user\"\n                id=\"dateFrom_user\"\n                min={dates}\n                onChange={(e) =>\n                  setBathhouse({ ...bathhouse, date: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"bathhouse--date--time\">\n              <div>Время:</div>\n              <div className=\"bathhouse--time\">\n                <input\n                  list=\"inputs_time1\"\n                  type=\"time\"\n                  min=\"09:00\"\n                  max=\"22:00\"\n                  className=\"input input_time bathhouse_time\"\n                  name=\"bathhouse_sauna_time\"\n                  placeholder={bathhouse.time}\n                  value={bathhouse.time}\n                  maxLength=\"5\"\n                  required=\"req\"\n                  pattern=\"^([0-1]\\d|2[0-3])(:00)?$\"\n                  onChange={(e) => {\n                    setBathhouse({ ...bathhouse, time: e.target.value });\n                  }}\n                  onBlur={(e) => {\n                    if (e.target.value.length > 4) {\n                      setBathhouse({\n                        ...bathhouse,\n                        time:\n                          e.target.value[0] +\n                          e.target.value[1] +\n                          e.target.value[2] +\n                          \"00\",\n                      });\n                    }\n                    if (e.target.value.length <= 2) {\n                      if (e.target.value.length === 1) {\n                        setBathhouse({\n                          ...bathhouse,\n                          time: \"0\" + e.target.value + \":00\",\n                        });\n                      } else {\n                        setBathhouse({\n                          ...bathhouse,\n                          time: e.target.value + \":00\",\n                        });\n                      }\n                    }\n                  }}\n                />\n                <datalist id=\"inputs_time1\">{LISTTIME}</datalist>\n              </div>\n            </div>\n          </div>\n          <Broom />\n          <div>\n            <div\n              className={\n                bathhouse.drinkAndTreats.active\n                  ? \"checkbox opencheckbox--show \"\n                  : \"checkbox close--bathhouse\"\n              }\n            >\n              <input\n                type=\"checkbox\"\n                name=\"bathhouse_drinkAndTreats\"\n                id=\"bathhouse_drinkAndTreats\"\n                checked={bathhouse.drinkAndTreats.active}\n                onChange={(e) => {\n                  setBathhouse({\n                    ...bathhouse,\n                    drinkAndTreats: {\n                      ...bathhouse.drinkAndTreats,\n                      active: e.target.checked,\n                    },\n                  });\n                }}\n              />\n              <label htmlFor=\"bathhouse_drinkAndTreats\">\n                Напитки и угощения\n              </label>\n            </div>\n            {bathhouse.drinkAndTreats.active && (\n              <div className=\"bathhouse--drinkAndTreats\">\n                <textarea\n                  className=\"textarea input_time\"\n                  placeholder=\"Пожалуйста, укажите что вы желаете и на сколько персон: Травяной чай, Мёд, Варенье или Морс.\"\n                  name=\"banquet_text\"\n                  value={bathhouse.drinkAndTreats.order}\n                  onChange={(e) => {\n                    setBathhouse({\n                      ...bathhouse,\n                      drinkAndTreats: {\n                        ...bathhouse.drinkAndTreats,\n                        order: e.target.value,\n                      },\n                    });\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"./_alert.scss\";\nimport { CostomContext } from \"../../_context.jsx\";\n\nexport default function Alert() {\n  const { tops, AlertText, show_on } = useContext(CostomContext);\n  return (\n    <div className=\"alert\">\n      {show_on && (\n        <div style={{ top: `${tops}` }} className=\"alert-show\">\n          {AlertText\n            ? AlertText\n            : `Спасибо за ваш заказ! \\n Данные уже отправлены!`}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CostomContext } from \"../../_context.jsx\";\nimport \"./_formAdd.scss\";\nimport \"../_inputs.scss\";\nimport \"../_buttons.scss\";\nimport AdditionalFields from \"./additionalFields.jsx\";\nimport Bathhouse from \"../Moduls/bathhouse/bathhouse.jsx\";\nimport Alert from \"../alert/_alert.jsx\";\n\nexport default function Middle() {\n  const {\n    setGazebosTime,\n    setChernyean,\n    setGazebos,\n    setChernyeanTime,\n    chernyean,\n    gazebos,\n    chernyeanTime,\n    gazebosTime,\n    house,\n    // setHouse,\n    OutCheckbox,\n    setCrib,\n    crib,\n    massageAlert,\n    FIO,\n    setOrderServices,\n    orderServices,\n    petAlert,\n    dateResidence,\n    LISTTIME,\n  } = useContext(CostomContext);\n\n  return (\n    <>\n      <Alert />\n      <div className=\"bx24_form\">\n        <form className=\"form-user\" action=\"true\" method=\"post\">\n          <div className=\"div--form\">\n            Дом&nbsp;/&nbsp;Апартаменты:\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"home_user\"\n              id=\"home\"\n              value={house}\n              disabled\n              // onChange={(e) => setHouse(e.target.value)}\n            />\n          </div>\n          <div className=\"div--form\">\n            Даты проживания:\n            <div className=\"date__residence\">\n              <div className=\"date__residence--from\">\n                <span>С:</span>\n                <input\n                  disabled\n                  value={dateResidence.From}\n                  className=\"input\"\n                  type=\"date\"\n                  name=\"dateFrom_user\"\n                  id=\"dateFrom_user\"\n                  // min={dates}\n                  // onChange={(e) =>\n                  //   setDateResidence({ ...dateResidence, From: e.target.value })\n                  // }\n                />\n              </div>\n              <div className=\"date__residence--to\">\n                <span>По:</span>\n                <input\n                  disabled\n                  value={dateResidence.To}\n                  className=\"input\"\n                  type=\"date\"\n                  name=\"dateTo_user\"\n                  id=\"dateTo_user\"\n                  // min={dateResidence.From ? dateResidence.From : dates}\n                  // onChange={(e) =>\n                  //   setDateResidence({ ...dateResidence, To: e.target.value })\n                  // }\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"div--form\">\n            Фамилия Имя Отчество\n            <input\n              value={FIO}\n              className=\"input\"\n              type=\"text\"\n              name=\"FIO_user\"\n              id=\"FIO_user\"\n              disabled\n              // onChange={(e) => setFIO(e.target.value)}\n            />\n          </div>\n          <Bathhouse />\n          <div\n            className={\n              chernyean\n                ? \"bathhouse opencheckbox--show\"\n                : \"bathhouse close--bathhouse\"\n            }\n          >\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"bathhouse_chernyean\"\n                id=\"bathhouse_chernyean\"\n                checked={chernyean}\n                onChange={(e) => {\n                  OutCheckbox(e.target.checked, setChernyean);\n                }}\n              />\n              <label htmlFor=\"bathhouse_chernyean\">\n                Забронировать банный чан\n              </label>\n            </div>\n            {chernyean && (\n              <div className=\"checkbox--time\">\n                <div>Время:</div>\n                <div className=\"bathhouse--time\">\n                  <input\n                    list=\"inputs_time2\"\n                    className=\"input input_time\"\n                    type=\"time\"\n                    min=\"09:00\"\n                    max=\"22:00\"\n                    name=\"bathhouse_chernyean_time\"\n                    value={chernyeanTime}\n                    pattern=\"^([0-1]\\d|2[0-3])(:00)?$\"\n                    onChange={(e) => setChernyeanTime(e.target.value)}\n                    onBlur={(e) => {\n                      if (e.target.value.length > 4) {\n                        setChernyeanTime(\n                          e.target.value[0] +\n                            e.target.value[1] +\n                            e.target.value[2] +\n                            \"00\"\n                        );\n                      }\n                      if (e.target.value.length <= 2) {\n                        if (e.target.value.length === 1) {\n                          setChernyeanTime(\"0\" + e.target.value + \":00\");\n                        } else {\n                          setChernyeanTime(e.target.value + \":00\");\n                        }\n                      }\n                    }}\n                  />\n                  <datalist id=\"inputs_time2\">{LISTTIME}</datalist>\n                </div>\n              </div>\n            )}\n          </div>\n          <div\n            className={\n              gazebos\n                ? \"bathhouse opencheckbox--show\"\n                : \"bathhouse close--bathhouse\"\n            }\n          >\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"bathhouse_gazebos\"\n                id=\"bathhouse_gazebos\"\n                checked={gazebos}\n                onChange={(e) => {\n                  OutCheckbox(e.target.checked, setGazebos);\n                }}\n              />\n              <label htmlFor=\"bathhouse_gazebos\">Забронировать беседку</label>\n            </div>\n            {gazebos && (\n              <div className=\"checkbox--time\">\n                <div>Время:</div>\n                <div className=\"bathhouse--time\">\n                  <input\n                    list=\"inputs_time3\"\n                    className=\"input input_time\"\n                    type=\"time\"\n                    min=\"09:00\"\n                    max=\"22:00\"\n                    pattern=\"^([0-1]\\d|2[0-3])(:00)?$\"\n                    name=\"bathhouse_gazebos_time\"\n                    value={gazebosTime}\n                    onChange={(e) => setGazebosTime(e.target.value)}\n                    onBlur={(e) => {\n                      if (e.target.value.length > 4) {\n                        setGazebosTime(\n                          e.target.value[0] +\n                            e.target.value[1] +\n                            e.target.value[2] +\n                            \"00\"\n                        );\n                      }\n                      if (e.target.value.length <= 2) {\n                        if (e.target.value.length === 1) {\n                          setGazebosTime(\"0\" + e.target.value + \":00\");\n                        } else {\n                          setGazebosTime(e.target.value + \":00\");\n                        }\n                      }\n                    }}\n                  />\n                  <datalist id=\"inputs_time3\">{LISTTIME}</datalist>\n                </div>\n              </div>\n            )}\n          </div>\n          <div\n            className={\n              crib.active\n                ? \"bathhouse opencheckbox--show barbecue\"\n                : \"bathhouse barbecue close--bathhouse\"\n            }\n          >\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"crib\"\n                id=\"crib\"\n                checked={crib.active}\n                onChange={(e) => {\n                  setCrib({\n                    ...crib,\n                    active: e.target.checked,\n                  });\n                }}\n              />\n              <label htmlFor=\"crib\">Установить детскую кроватку</label>\n            </div>\n            {crib.active && (\n              <div className=\"checkbox--time extraSpace\">\n                <div>Количество детей:</div>\n                <div className=\"bathhouse--time\">\n                  <input\n                    className=\"input input_time extraSpace_range\"\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"7\"\n                    id=\"crib_count\"\n                    name=\"crib_count\"\n                    value={crib.count}\n                    onChange={(e) => {\n                      setCrib({\n                        ...crib,\n                        count: e.target.value,\n                      });\n                    }}\n                  />\n                  <div\n                    class=\"item__add\"\n                    onClick={() => {\n                      if (crib.count < 5)\n                        setCrib({\n                          ...crib,\n                          count: crib.count + 1,\n                        });\n                    }}\n                  >\n                    ‹\n                  </div>\n                  <div\n                    class=\"item__remove\"\n                    onClick={() => {\n                      if (crib.count > 1)\n                        setCrib({\n                          ...crib,\n                          count: crib.count - 1,\n                        });\n                    }}\n                  >\n                    ‹\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"div--form\">\n            <div>Прочие услуги:</div>\n            <div className=\"form__otherServices\">\n              <div\n                className={\n                  orderServices.pet\n                    ? \"checkbox opencheckbox--show bathhouse\"\n                    : \"checkbox bathhouse close--bathhouse\"\n                }\n              >\n                <div className=\"alert--checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"pet\"\n                    id=\"pet\"\n                    checked={orderServices.pet}\n                    onChange={(e) => {\n                      setOrderServices({\n                        ...orderServices,\n                        pet: e.target.checked,\n                      });\n                    }}\n                  />\n                  <label className=\"alert--pet\" htmlFor=\"pet\">\n                    Имеется&nbsp;домашний питомец\n                  </label>\n                  <span className=\"alert--question\" onClick={() => petAlert()}>\n                    ?\n                  </span>\n                </div>\n              </div>\n              <div\n                className={\n                  orderServices.massage\n                    ? \"checkbox opencheckbox--show bathhouse\"\n                    : \"checkbox bathhouse close--bathhouse\"\n                }\n              >\n                <div className=\"alert--checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"massage\"\n                    id=\"massage\"\n                    checked={orderServices.massage}\n                    onChange={(e) => {\n                      setOrderServices({\n                        ...orderServices,\n                        massage: e.target.checked,\n                      });\n                    }}\n                  />\n                  <label htmlFor=\"massage\">Требуется массаж</label>\n                  <span\n                    className=\"alert--question\"\n                    onClick={() => massageAlert()}\n                  >\n                    ?\n                  </span>\n                </div>\n              </div>\n              <div\n                className={\n                  orderServices.manicure\n                    ? \"checkbox opencheckbox--show bathhouse\"\n                    : \"checkbox bathhouse close--bathhouse\"\n                }\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"manicure\"\n                  id=\"manicure\"\n                  checked={orderServices.manicure}\n                  onChange={(e) => {\n                    setOrderServices({\n                      ...orderServices,\n                      manicure: e.target.checked,\n                    });\n                  }}\n                />\n                <label htmlFor=\"manicure\">Требуется маникюр</label>\n              </div>\n              <div\n                className={\n                  orderServices.businessExcursion\n                    ? \"checkbox opencheckbox--show bathhouse\"\n                    : \"checkbox bathhouse close--bathhouse\"\n                }\n              >\n                <input\n                  type=\"checkbox\"\n                  name=\"businessExcursion\"\n                  id=\"businessExcursion\"\n                  checked={orderServices.businessExcursion}\n                  onChange={(e) => {\n                    setOrderServices({\n                      ...orderServices,\n                      businessExcursion: e.target.checked,\n                    });\n                  }}\n                />\n                <label htmlFor=\"businessExcursion\">\n                  Посетить бизнес экскурсию\n                </label>\n              </div>\n            </div>\n          </div>\n          <AdditionalFields />\n          <div className=\"form-btn\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              <span>Подтвердить</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./_header.scss\";\n\nexport default function Header() {\n  const [Win_width, setWin_width] = useState(\n    document.documentElement.clientWidth\n  );\n  const [shutters, setShutters] = useState(\"\");\n  window.addEventListener(\"resize\", () =>\n    setWin_width(document.documentElement.clientWidth)\n  );\n  useEffect(() => {\n    setShutters(\"\");\n    if (window.pageYOffset >= 16) {\n      setShutters(\"header--shut\");\n    } else setShutters(\"\");\n    window.onscroll = () => {\n      if (window.pageYOffset >= 16) {\n        setShutters(\"header--shut\");\n      } else setShutters(\"\");\n    };\n  }, [Win_width]);\n\n  return (\n    <>\n      <div\n        onClick={() => console.log(Win_width)}\n        className={shutters ? shutters + \" header\" : \" header\"}\n      >\n        <div className=\"header--inner\">\n          <a href=\"https://lukino.ru/\">\n            <img className=\"header--img\" src=\"logowhite.png\" alt=\"a\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"header--nav\">\n        <div className=\"header--breadcrumbs\">\n          <ul className=\"breadcrumbs\">\n            <li className=\"breadcrumbs__item\">\n              <a href=\"https://lukino.ru/\" title=\"Главная\">\n                <svg\n                  version=\"1.1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  xmlnsa=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  width=\"1rem\"\n                  height=\"0.8rem\"\n                  viewBox=\"0 0 228.6 187.5\"\n                  style={{ enableBackground: \"new 0 0 228.6 187.5\" }}\n                  xmlSpace=\"preserve\"\n                >\n                  <defs></defs>\n                  <path\n                    d=\"M174.7,163.5h-26v-62.1H79.9v62.1h-26V77.4l60.4-47l60.4,47V163.5z M103.9,125.5h20.8v34.4h-20.8V125.5z M228.6,89L114.3,0\n                                L65.8,37.8v-20h-24v38.7L0,89l14.7,18.9l15.2-11.8v91.4h168.8V96.1l15.2,11.8L228.6,89z\"\n                  />\n                </svg>\n              </a>\n            </li>\n            <li className=\"breadcrumbs__item\">\n              <a href=\"!#\">Форма бронирования</a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"label\">Форма бронирования</div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Midle from \"./midle/formAdd.jsx\";\nimport Header from \"./header/header.jsx\";\nimport \"./_inputs.scss\";\nimport \"./_buttons.scss\";\nimport \"./_breadcrambs.scss\";\nimport { Context } from \"../_context.jsx\";\n\nexport default function Content() {\n  return (\n    <Context>\n      <Header />\n      <Midle />\n    </Context>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Content from \"./Content/content\";\n\nfunction App() {\n  return <Content />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}